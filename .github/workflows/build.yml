name: Build ZIBO Keyboard Input Plugin

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build Plugin
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            artifact_name: win.xpl
          - os: macos-latest
            platform: mac
            artifact_name: mac.xpl
          - os: ubuntu-latest
            platform: linux
            artifact_name: lin.xpl
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      shell: pwsh
    
    - name: Verify CMake installation (Windows)
      if: runner.os == 'Windows'
      run: |
        # Restart PowerShell session to ensure environment variables take effect
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")
        cmake --version
      shell: pwsh
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake
    
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
    
    - name: Build plugin (Windows)
      if: runner.os == 'Windows'
      run: |
        # Ensure environment variables are set correctly
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")
        python build_all.py --platform ${{ matrix.platform }}
      shell: pwsh
    
    - name: Build plugin (Unix)
      if: runner.os != 'Windows'
      run: |
        python build_all.py --platform ${{ matrix.platform }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zibo-keyboard-plugin-${{ matrix.platform }}
        path: build/${{ matrix.artifact_name }}
        retention-days: 30

  package:
    name: Create Release Package
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Create release package
      run: |
        mkdir -p release/ZIBOKeyboardInput
        cp artifacts/zibo-keyboard-plugin-windows/win.xpl release/ZIBOKeyboardInput/
        cp artifacts/zibo-keyboard-plugin-mac/mac.xpl release/ZIBOKeyboardInput/
        cp artifacts/zibo-keyboard-plugin-linux/lin.xpl release/ZIBOKeyboardInput/
        
        # Get version from VERSION file or tag
        if [ -f VERSION ]; then
          VERSION=$(cat VERSION)
        else
          VERSION="dev"
        fi
        
        # Create installation instructions file
        cat > release/ZIBOKeyboardInput/README.txt << EOF
        ZIBO Keyboard Input Plugin v${VERSION}
        =====================================
        
        Choose the correct plugin file for your platform:
        - Windows: win.xpl
        - macOS: mac.xpl  
        - Linux: lin.xpl
        
        Installation:
        1. Copy the appropriate .xpl file to your X-Plane installation
        2. Place it in: Resources/plugins/ZIBOKeyboardInput/
        3. Restart X-Plane
        
        Usage:
        - Load ZIBO 737 aircraft in X-Plane
        - Bind keys to these commands in Settings > Keyboard:
          * 3370Tech/ZIBO_Keyboard/Toggle_Keyboard_Input_Captain
          * 3370Tech/ZIBO_Keyboard/Toggle_Keyboard_Input_FO
        - Toggle keyboard input on/off as needed
        
        Build: \$(date '+%Y-%m-%d %H:%M:%S') UTC
        Commit: \${{ github.sha }}
        EOF
        
        cd release
        tar -czf ZIBOKeyboardInput.tar.gz ZIBOKeyboardInput/
    
    - name: Upload release package
      uses: actions/upload-artifact@v4
      with:
        name: zibo-keyboard-plugin-all-platforms
        path: release/ZIBOKeyboardInput.tar.gz
        retention-days: 90

  release:
    name: Create GitHub Release
    needs: package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download release package
      uses: actions/download-artifact@v4
      with:
        name: zibo-keyboard-plugin-all-platforms
        path: ./
    
    - name: Download individual platform artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Get version and changelog info
      id: version
      run: |
        # Extract version from tag (remove 'v' prefix if present)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Try to get previous tag for changelog
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
        fi
        
        # Generate basic changelog from commits
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## What's Changed" > CHANGELOG.md
          git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
        else
          echo "## What's New" > CHANGELOG.md
          echo "- Initial release" >> CHANGELOG.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: ZIBO Keyboard Input Plugin v${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        files: |
          ZIBOKeyboardInput.tar.gz
          artifacts/zibo-keyboard-plugin-windows/win.xpl
          artifacts/zibo-keyboard-plugin-mac/mac.xpl
          artifacts/zibo-keyboard-plugin-linux/lin.xpl
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
